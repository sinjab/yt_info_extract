name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov black isort
        
    - name: Code formatting check
      run: |
        black --check yt_info_extract tests
        isort --check-only yt_info_extract tests
        
    - name: Run unit tests
      run: |
        pytest tests/ --cov=yt_info_extract --cov-report=term-missing -v -m "not e2e"
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        fail_ci_if_error: false

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: twine check dist/*
      
    - name: Test installation
      run: |
        pip install dist/*.whl
        python -c "import yt_info_extract; print(f'✓ v{yt_info_extract.__version__}')"
        yt-info --help > /dev/null && echo "✓ CLI works"