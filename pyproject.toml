[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yt-info-extract"
version = "1.0.0"
description = "Extract video information from YouTube videos including title, description, channel name, publication date and views"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Khaldoon Sinjab", email = "sinjab@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
]
keywords = [
    "youtube", "metadata", "video", "information", "title", "description", 
    "channel", "views", "extract", "api", "cli", "automation"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "google-api-python-client>=2.100.0",
    "yt-dlp>=2023.7.6",
    "pytubefix>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/sinjab/yt-info-extract"
Documentation = "https://github.com/sinjab/yt-info-extract#readme"
Repository = "https://github.com/sinjab/yt-info-extract"
Issues = "https://github.com/sinjab/yt-info-extract/issues"

[project.scripts]
yt-info = "yt_info_extract.cli:main"

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100

[tool.hatch.build.targets.wheel]
packages = ["yt_info_extract"]

# Test/coverage config
[tool.pytest.ini_options]
addopts = "-q --cov=yt_info_extract --cov-report=term-missing"
markers = [
  "e2e: end-to-end tests that hit real network APIs (YouTube)",
]

[tool.coverage.run]
source = ["yt_info_extract"]
omit = [
  "yt_info_extract/examples/*",
]

[tool.coverage.report]
exclude_lines = [
  "if __name__ == \"__main__\":",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "build",
    "dist",
    ".venv",
    ".env",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "build>=1.2.2.post1",
    "pycodestyle>=2.10.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "twine>=6.1.0",
]
